name: ML CI/CD Pipeline
run-name: ${{ github.actor }} ML Workflow with Azure

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches: 
      - main

jobs:
  model-training:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Clone repository code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Prepare Python environment
      - name: Prepare Python environment
        run: |
          python -m pip install --upgrade pip
          pip install pandas scikit-learn joblib numpy azure-cli

      # Azure login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Set up Azure ML CLI extension
      - name: Install Azure ML extension
        run: |
          az extension add -n ml -y
          az extension update -n ml

      # Stage 1: Model Training Simulation
      - name: Simulate Model Training
        run: |
          echo "Model training step simulated"
          mkdir -p trained_model
          touch trained_model/model.pkl

  model-registration:
    needs: model-training
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository code
        uses: actions/checkout@v4

      # Azure login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Stage 2: Register Model in Azure ML
      - name: Register Model in Azure ML
        run: |
          az ml model create \
            --name activity-classifier \
            --path "trained_model/model.pkl" \
            --type custom_model \
            --workspace-name myminiproject \
            --resource-group Miniproject

  model-deployment:
    needs: model-registration
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository code
        uses: actions/checkout@v4

      # Prepare deployment environment
      - name: Prepare Deployment Files
        run: |
          mkdir -p deploy
          cp PRO/Model.py deploy/score.py
          cat > deploy/environment.yml << EOL
          name: activity-classification
          channels:
            - defaults
            - conda-forge
          dependencies:
            - python=3.9
            - pandas
            - scikit-learn
            - numpy
            - joblib
          EOL

      # Azure login
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Stage 3: Create Online Endpoint
      - name: Create Online Endpoint
        run: |
          az ml online-endpoint create \
            --name activity-classifier-endpoint \
            --workspace-name myminiproject \
            --resource-group Miniproject

      # Stage 4: Create Online Deployment
      - name: Create Online Deployment
        run: |
          az ml online-deployment create \
            --name activity-classifier-deployment \
            --endpoint activity-classifier-endpoint \
            --model activity-classifier \
            --code-path deploy \
            --environment-name activity-classification \
            --workspace-name myminiproject \
            --resource-group Miniproject